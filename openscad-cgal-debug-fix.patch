diff -ur openscad-2021.01.orig/src/cgalutils.h openscad-2021.01/src/cgalutils.h
--- openscad-2021.01.orig/src/cgalutils.h	2021-01-31 21:17:41.000000000 +0100
+++ openscad-2021.01/src/cgalutils.h	2023-04-26 22:23:42.433446908 +0200
@@ -45,7 +45,6 @@
 	bool is_approximately_convex(const PolySet &ps);
 	Geometry const* applyMinkowski(const Geometry::Geometries &children);
 
-	template <typename Polyhedron> std::string printPolyhedron(const Polyhedron &p);
 	template <typename Polyhedron> bool createPolySetFromPolyhedron(const Polyhedron &p, PolySet &ps);
 	template <typename Polyhedron> bool createPolyhedronFromPolySet(const PolySet &ps, Polyhedron &p);
 	template <class Polyhedron_A, class Polyhedron_B> 
diff -ur openscad-2021.01.orig/src/cgalutils-polyhedron.cc openscad-2021.01/src/cgalutils-polyhedron.cc
--- openscad-2021.01.orig/src/cgalutils-polyhedron.cc	2021-01-31 21:17:41.000000000 +0100
+++ openscad-2021.01/src/cgalutils-polyhedron.cc	2023-04-26 22:23:25.661228696 +0200
@@ -337,19 +337,6 @@
     }
 	};
 
-	template <typename Polyhedron>
-	std::string printPolyhedron(const Polyhedron &p) {
-		std::ostringstream sstream;
-		sstream.precision(20);
-
-    Polyhedron_writer writer;
-    generic_print_polyhedron(sstream, p, writer);
-		
-		return sstream.str();
-	}
-
-	template std::string printPolyhedron(const CGAL_Polyhedron &p);
-
 }; // namespace CGALUtils
 
 #endif /* ENABLE_CGAL */
